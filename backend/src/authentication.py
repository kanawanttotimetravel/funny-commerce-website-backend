import os
from dotenv import load_dotenv

from flask import jsonify, request, Blueprint
import pymongo
from utils import parse_json, users

load_dotenv()


authentication_bp = Blueprint('authentication', __name__)


@authentication_bp.route('/register', methods=['GET'])
def hello_register():
    return 'Hello Kana!'


@authentication_bp.route('/register', methods=['POST'])
def register():
    """
    Add a new user to the database in the following format
    {
        '_id': ObjectId('<KEY>') - Generated by DB
        'username': str,
        'password': str'
    }
    :return:
    """
    data = request.json
    query = {'username': data['username']}
    if users.find_one(query):
        return parse_json({
            'message': 'This username is already taken'
        })
    result = users.insert_one(data)
    return parse_json({
        'message': 'ok',
        'userId': str(result.inserted_id)
    })


@authentication_bp.route('/login', methods=['GET'])
def hello_login():
    return 'Hello Kana!'


@authentication_bp.route('/login', methods=['POST'])
def login():
    """
       Login
       {
           'username': str,
           'password': str'
       }
       :return:
       """
    data = request.json
    query = {
        'username': data['username'],
        'password': data['password']
    }
    result = users.find_one(query)
    if result:
        return parse_json({
            'message': 'ok',
            'userId': str(result['_id'])
        })

    return parse_json({
                'message': 'Invalid username or password'
            })
